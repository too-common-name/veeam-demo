apiVersion: v1
kind: Namespace
metadata:
  name: vm-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  labels:
    app: fedora-gitops
    vm.kubevirt.io/template: fedora-server-small
    vm.kubevirt.io/template.revision: "1"
    vm.kubevirt.io/template.version: v0.14.0
  name: fedora-gitops
  namespace: vm-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  dataVolumeTemplates:
  - apiVersion: cdi.kubevirt.io/v1beta1
    kind: DataVolume
    metadata:
      name: fedora-gitops
    spec:
      sourceRef:
        kind: DataSource
        name: fedora
        namespace: openshift-virtualization-os-images
      storage:
        resources:
          requests:
            storage: 30Gi
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/flavor: small
        vm.kubevirt.io/os: fedora
        vm.kubevirt.io/workload: server
      labels:
        kubevirt.io/domain: fedora-gitops
        kubevirt.io/size: small
    spec:
      domain:
        cpu:
          cores: 1
          sockets: 1
          threads: 1
        devices:
          disks:
          - disk:
              bus: virtio
            name: fedora-gitops
          - disk:
              bus: virtio
            name: cloudinitdisk
          interfaces:
          - masquerade: {}
            name: default
          networkInterfaceMultiqueue: true
          rng: {}
        resources:
          requests:
            memory: 2Gi
      evictionStrategy: LiveMigrate
      networks:
      - name: default
        pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
      - dataVolume:
          name: fedora-gitops
        name: fedora-gitops
      - cloudInitNoCloud:
          secretRef:
            name: fedora-cloudinit-secret
        name: cloudinitdisk
---
apiVersion: config.kio.kasten.io/v1alpha1
kind: Policy
metadata:
  name: backup-vm
  namespace: kasten-io
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  comment: Backup vm created using gitops
  frequency: "@onDemand"
  actions:
    - action: backup
    - action: export
      exportParameters:
        frequency: "@onDemand"
        profile:
          name: profile-awss3-kasten-backup
          namespace: kasten-io
        exportData:
          enabled: true
  selector:
    matchExpressions:
      - key: k10.kasten.io/appNamespace
        operator: In
        values:
          - vm-gitops