{{- if .Values.kasten.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k10-eula-info
  namespace: kasten-io
data:
  accepted: "true"
  company: '{{ .Values.kasten.company }}'
  email: '{{ .Values.kasten.email }}'
---
apiVersion: apik10.kasten.io/v1alpha1
kind: K10
metadata:
  annotations:
    helm.sdk.operatorframework.io/reconcile-period: 2m
    helm.sdk.operatorframework.io/rollback-force: 'false'
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: k10
  namespace: kasten-io
spec:
  auth:
    basicAuth:
      enabled: false
      htpasswd: ''
      secretName: ''
    tokenAuth:
      enabled: true
  global:
    persistence:
      catalog:
        size: ''
      storageClass: ''
  metering:
    mode: ''
  route:
    enabled: true
    host: ''
    tls:
      enabled: true
---
apiVersion: config.kio.kasten.io/v1alpha1
kind: Profile
metadata:
  name: "profile-awss3-{{ .Values.kasten.bucket_name }}"
  namespace: kasten-io
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  type: Location
  locationSpec:
    credential:
      secretType: AwsAccessKey
      secret:
        apiVersion: v1
        kind: Secret
        name: "k10-awss3-{{ .Values.kasten.bucket_name }}-secret"
        namespace: kasten-io
    type: ObjectStore
    objectStore:
      name: "{{ .Values.kasten.bucket_name }}"
      objectStoreType: S3
      region: "{{ .Values.kasten.bucket_region }}"
{{- end }}
